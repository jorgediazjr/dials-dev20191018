/* *****************************************************
   THIS IS AN AUTOMATICALLY GENERATED FILE. DO NOT EDIT.
   *****************************************************

   Generated by:
     gltbx.generate_defines_bpl
 */

#include <boost/python/def.hpp>
#include <boost/python/scope.hpp>
#include <gltbx/include_opengl.h>

namespace gltbx { namespace gl { namespace boost_python {

  void
  wrap_defines_04(boost::python::scope scope)
  {
#if defined(GL_MAP2_VERTEX_3)
    scope.attr("GL_MAP2_VERTEX_3") = GL_MAP2_VERTEX_3;
#endif
#if defined(GL_MAP2_VERTEX_4)
    scope.attr("GL_MAP2_VERTEX_4") = GL_MAP2_VERTEX_4;
#endif
#if defined(GL_MAP_COLOR)
    scope.attr("GL_MAP_COLOR") = GL_MAP_COLOR;
#endif
#if defined(GL_MAP_STENCIL)
    scope.attr("GL_MAP_STENCIL") = GL_MAP_STENCIL;
#endif
#if defined(GL_MATRIX_MODE)
    scope.attr("GL_MATRIX_MODE") = GL_MATRIX_MODE;
#endif
#if defined(GL_MAX_ATTRIB_STACK_DEPTH)
    scope.attr("GL_MAX_ATTRIB_STACK_DEPTH") = GL_MAX_ATTRIB_STACK_DEPTH;
#endif
#if defined(GL_MAX_CLIENT_ATTRIB_STACK_DEPTH)
    scope.attr("GL_MAX_CLIENT_ATTRIB_STACK_DEPTH") = GL_MAX_CLIENT_ATTRIB_STACK_DEPTH;
#endif
#if defined(GL_MAX_CLIP_PLANES)
    scope.attr("GL_MAX_CLIP_PLANES") = GL_MAX_CLIP_PLANES;
#endif
#if defined(GL_MAX_EVAL_ORDER)
    scope.attr("GL_MAX_EVAL_ORDER") = GL_MAX_EVAL_ORDER;
#endif
#if defined(GL_MAX_EXT)
    scope.attr("GL_MAX_EXT") = GL_MAX_EXT;
#endif
#if defined(GL_MAX_LIGHTS)
    scope.attr("GL_MAX_LIGHTS") = GL_MAX_LIGHTS;
#endif
#if defined(GL_MAX_LIST_NESTING)
    scope.attr("GL_MAX_LIST_NESTING") = GL_MAX_LIST_NESTING;
#endif
#if defined(GL_MAX_MODELVIEW_STACK_DEPTH)
    scope.attr("GL_MAX_MODELVIEW_STACK_DEPTH") = GL_MAX_MODELVIEW_STACK_DEPTH;
#endif
#if defined(GL_MAX_NAME_STACK_DEPTH)
    scope.attr("GL_MAX_NAME_STACK_DEPTH") = GL_MAX_NAME_STACK_DEPTH;
#endif
#if defined(GL_MAX_PIXEL_MAP_TABLE)
    scope.attr("GL_MAX_PIXEL_MAP_TABLE") = GL_MAX_PIXEL_MAP_TABLE;
#endif
#if defined(GL_MAX_PROJECTION_STACK_DEPTH)
    scope.attr("GL_MAX_PROJECTION_STACK_DEPTH") = GL_MAX_PROJECTION_STACK_DEPTH;
#endif
#if defined(GL_MAX_TEXTURE_SIZE)
    scope.attr("GL_MAX_TEXTURE_SIZE") = GL_MAX_TEXTURE_SIZE;
#endif
#if defined(GL_MAX_TEXTURE_STACK_DEPTH)
    scope.attr("GL_MAX_TEXTURE_STACK_DEPTH") = GL_MAX_TEXTURE_STACK_DEPTH;
#endif
#if defined(GL_MAX_VIEWPORT_DIMS)
    scope.attr("GL_MAX_VIEWPORT_DIMS") = GL_MAX_VIEWPORT_DIMS;
#endif
#if defined(GL_MIN_EXT)
    scope.attr("GL_MIN_EXT") = GL_MIN_EXT;
#endif
#if defined(GL_MODELVIEW)
    scope.attr("GL_MODELVIEW") = GL_MODELVIEW;
#endif
#if defined(GL_MODELVIEW_MATRIX)
    scope.attr("GL_MODELVIEW_MATRIX") = GL_MODELVIEW_MATRIX;
#endif
#if defined(GL_MODELVIEW_STACK_DEPTH)
    scope.attr("GL_MODELVIEW_STACK_DEPTH") = GL_MODELVIEW_STACK_DEPTH;
#endif
#if defined(GL_MODULATE)
    scope.attr("GL_MODULATE") = GL_MODULATE;
#endif
#if defined(GL_MULT)
    scope.attr("GL_MULT") = GL_MULT;
#endif
#if defined(GL_N3F_V3F)
    scope.attr("GL_N3F_V3F") = GL_N3F_V3F;
#endif
#if defined(GL_NAME_STACK_DEPTH)
    scope.attr("GL_NAME_STACK_DEPTH") = GL_NAME_STACK_DEPTH;
#endif
#if defined(GL_NAND)
    scope.attr("GL_NAND") = GL_NAND;
#endif
#if defined(GL_NEAREST)
    scope.attr("GL_NEAREST") = GL_NEAREST;
#endif
#if defined(GL_NEAREST_MIPMAP_LINEAR)
    scope.attr("GL_NEAREST_MIPMAP_LINEAR") = GL_NEAREST_MIPMAP_LINEAR;
#endif
#if defined(GL_NEAREST_MIPMAP_NEAREST)
    scope.attr("GL_NEAREST_MIPMAP_NEAREST") = GL_NEAREST_MIPMAP_NEAREST;
#endif
#if defined(GL_NEVER)
    scope.attr("GL_NEVER") = GL_NEVER;
#endif
#if defined(GL_NICEST)
    scope.attr("GL_NICEST") = GL_NICEST;
#endif
#if defined(GL_NONE)
    scope.attr("GL_NONE") = GL_NONE;
#endif
#if defined(GL_NOOP)
    scope.attr("GL_NOOP") = GL_NOOP;
#endif
#if defined(GL_NOR)
    scope.attr("GL_NOR") = GL_NOR;
#endif
#if defined(GL_NORMALIZE)
    scope.attr("GL_NORMALIZE") = GL_NORMALIZE;
#endif
#if defined(GL_NORMAL_ARRAY)
    scope.attr("GL_NORMAL_ARRAY") = GL_NORMAL_ARRAY;
#endif
#if defined(GL_NORMAL_ARRAY_POINTER)
    scope.attr("GL_NORMAL_ARRAY_POINTER") = GL_NORMAL_ARRAY_POINTER;
#endif
#if defined(GL_NORMAL_ARRAY_STRIDE)
    scope.attr("GL_NORMAL_ARRAY_STRIDE") = GL_NORMAL_ARRAY_STRIDE;
#endif
#if defined(GL_NORMAL_ARRAY_TYPE)
    scope.attr("GL_NORMAL_ARRAY_TYPE") = GL_NORMAL_ARRAY_TYPE;
#endif
#if defined(GL_NOTEQUAL)
    scope.attr("GL_NOTEQUAL") = GL_NOTEQUAL;
#endif
#if defined(GL_NO_ERROR)
    scope.attr("GL_NO_ERROR") = GL_NO_ERROR;
#endif
#if defined(GL_OBJECT_LINEAR)
    scope.attr("GL_OBJECT_LINEAR") = GL_OBJECT_LINEAR;
#endif
#if defined(GL_OBJECT_PLANE)
    scope.attr("GL_OBJECT_PLANE") = GL_OBJECT_PLANE;
#endif
#if defined(GL_ONE)
    scope.attr("GL_ONE") = GL_ONE;
#endif
#if defined(GL_ONE_MINUS_DST_ALPHA)
    scope.attr("GL_ONE_MINUS_DST_ALPHA") = GL_ONE_MINUS_DST_ALPHA;
#endif
#if defined(GL_ONE_MINUS_DST_COLOR)
    scope.attr("GL_ONE_MINUS_DST_COLOR") = GL_ONE_MINUS_DST_COLOR;
#endif
#if defined(GL_ONE_MINUS_SRC_ALPHA)
    scope.attr("GL_ONE_MINUS_SRC_ALPHA") = GL_ONE_MINUS_SRC_ALPHA;
#endif
#if defined(GL_ONE_MINUS_SRC_COLOR)
    scope.attr("GL_ONE_MINUS_SRC_COLOR") = GL_ONE_MINUS_SRC_COLOR;
#endif
#if defined(GL_OR)
    scope.attr("GL_OR") = GL_OR;
#endif
#if defined(GL_ORDER)
    scope.attr("GL_ORDER") = GL_ORDER;
#endif
#if defined(GL_OR_INVERTED)
    scope.attr("GL_OR_INVERTED") = GL_OR_INVERTED;
#endif
#if defined(GL_OR_REVERSE)
    scope.attr("GL_OR_REVERSE") = GL_OR_REVERSE;
#endif
#if defined(GL_OUT_OF_MEMORY)
    scope.attr("GL_OUT_OF_MEMORY") = GL_OUT_OF_MEMORY;
#endif
#if defined(GL_PACK_ALIGNMENT)
    scope.attr("GL_PACK_ALIGNMENT") = GL_PACK_ALIGNMENT;
#endif
#if defined(GL_PACK_LSB_FIRST)
    scope.attr("GL_PACK_LSB_FIRST") = GL_PACK_LSB_FIRST;
#endif
#if defined(GL_PACK_ROW_LENGTH)
    scope.attr("GL_PACK_ROW_LENGTH") = GL_PACK_ROW_LENGTH;
#endif
#if defined(GL_PACK_SKIP_PIXELS)
    scope.attr("GL_PACK_SKIP_PIXELS") = GL_PACK_SKIP_PIXELS;
#endif
#if defined(GL_PACK_SKIP_ROWS)
    scope.attr("GL_PACK_SKIP_ROWS") = GL_PACK_SKIP_ROWS;
#endif
#if defined(GL_PACK_SWAP_BYTES)
    scope.attr("GL_PACK_SWAP_BYTES") = GL_PACK_SWAP_BYTES;
#endif
#if defined(GL_PASS_THROUGH_TOKEN)
    scope.attr("GL_PASS_THROUGH_TOKEN") = GL_PASS_THROUGH_TOKEN;
#endif
#if defined(GL_PERSPECTIVE_CORRECTION_HINT)
    scope.attr("GL_PERSPECTIVE_CORRECTION_HINT") = GL_PERSPECTIVE_CORRECTION_HINT;
#endif
#if defined(GL_PIXEL_MAP_A_TO_A)
    scope.attr("GL_PIXEL_MAP_A_TO_A") = GL_PIXEL_MAP_A_TO_A;
#endif
#if defined(GL_PIXEL_MAP_A_TO_A_SIZE)
    scope.attr("GL_PIXEL_MAP_A_TO_A_SIZE") = GL_PIXEL_MAP_A_TO_A_SIZE;
#endif
#if defined(GL_PIXEL_MAP_B_TO_B)
    scope.attr("GL_PIXEL_MAP_B_TO_B") = GL_PIXEL_MAP_B_TO_B;
#endif
#if defined(GL_AUX0)
    scope.attr("GL_AUX0") = GL_AUX0;
#endif
#if defined(GL_AUX1)
    scope.attr("GL_AUX1") = GL_AUX1;
#endif
#if defined(GL_AUX2)
    scope.attr("GL_AUX2") = GL_AUX2;
#endif
#if defined(GL_AUX3)
    scope.attr("GL_AUX3") = GL_AUX3;
#endif
#if defined(GL_LIGHT0)
    scope.attr("GL_LIGHT0") = GL_LIGHT0;
#endif
#if defined(GL_LIGHT1)
    scope.attr("GL_LIGHT1") = GL_LIGHT1;
#endif
#if defined(GL_LIGHT2)
    scope.attr("GL_LIGHT2") = GL_LIGHT2;
#endif
#if defined(GL_LIGHT3)
    scope.attr("GL_LIGHT3") = GL_LIGHT3;
#endif
#if defined(GL_LIGHT4)
    scope.attr("GL_LIGHT4") = GL_LIGHT4;
#endif
#if defined(GL_LIGHT5)
    scope.attr("GL_LIGHT5") = GL_LIGHT5;
#endif
#if defined(GL_LIGHT6)
    scope.attr("GL_LIGHT6") = GL_LIGHT6;
#endif
#if defined(GL_LIGHT7)
    scope.attr("GL_LIGHT7") = GL_LIGHT7;
#endif
#if defined(GL_TEXTURE0)
    scope.attr("GL_TEXTURE0") = GL_TEXTURE0;
#endif
#if defined(GL_TEXTURE1)
    scope.attr("GL_TEXTURE1") = GL_TEXTURE1;
#endif
#if defined(GL_TEXTURE2)
    scope.attr("GL_TEXTURE2") = GL_TEXTURE2;
#endif
#if defined(GL_TEXTURE3)
    scope.attr("GL_TEXTURE3") = GL_TEXTURE3;
#endif
#if defined(GL_TEXTURE4)
    scope.attr("GL_TEXTURE4") = GL_TEXTURE4;
#endif
#if defined(GL_TEXTURE5)
    scope.attr("GL_TEXTURE5") = GL_TEXTURE5;
#endif
#if defined(GL_TEXTURE6)
    scope.attr("GL_TEXTURE6") = GL_TEXTURE6;
#endif
#if defined(GL_TEXTURE7)
    scope.attr("GL_TEXTURE7") = GL_TEXTURE7;
#endif
#if defined(GL_TEXTURE8)
    scope.attr("GL_TEXTURE8") = GL_TEXTURE8;
#endif
#if defined(GL_TEXTURE9)
    scope.attr("GL_TEXTURE9") = GL_TEXTURE9;
#endif
#if defined(GL_TEXTURE10)
    scope.attr("GL_TEXTURE10") = GL_TEXTURE10;
#endif
#if defined(GL_TEXTURE11)
    scope.attr("GL_TEXTURE11") = GL_TEXTURE11;
#endif
#if defined(GL_TEXTURE12)
    scope.attr("GL_TEXTURE12") = GL_TEXTURE12;
#endif
#if defined(GL_TEXTURE13)
    scope.attr("GL_TEXTURE13") = GL_TEXTURE13;
#endif
#if defined(GL_TEXTURE14)
    scope.attr("GL_TEXTURE14") = GL_TEXTURE14;
#endif
#if defined(GL_TEXTURE15)
    scope.attr("GL_TEXTURE15") = GL_TEXTURE15;
#endif
#if defined(GL_TEXTURE16)
    scope.attr("GL_TEXTURE16") = GL_TEXTURE16;
#endif
#if defined(GL_TEXTURE17)
    scope.attr("GL_TEXTURE17") = GL_TEXTURE17;
#endif
#if defined(GL_TEXTURE18)
    scope.attr("GL_TEXTURE18") = GL_TEXTURE18;
#endif
#if defined(GL_TEXTURE19)
    scope.attr("GL_TEXTURE19") = GL_TEXTURE19;
#endif
#if defined(GL_TEXTURE20)
    scope.attr("GL_TEXTURE20") = GL_TEXTURE20;
#endif
#if defined(GL_TEXTURE21)
    scope.attr("GL_TEXTURE21") = GL_TEXTURE21;
#endif
#if defined(GL_TEXTURE22)
    scope.attr("GL_TEXTURE22") = GL_TEXTURE22;
#endif
#if defined(GL_TEXTURE23)
    scope.attr("GL_TEXTURE23") = GL_TEXTURE23;
#endif
#if defined(GL_TEXTURE24)
    scope.attr("GL_TEXTURE24") = GL_TEXTURE24;
#endif
#if defined(GL_TEXTURE25)
    scope.attr("GL_TEXTURE25") = GL_TEXTURE25;
#endif
#if defined(GL_TEXTURE26)
    scope.attr("GL_TEXTURE26") = GL_TEXTURE26;
#endif
#if defined(GL_TEXTURE27)
    scope.attr("GL_TEXTURE27") = GL_TEXTURE27;
#endif
#if defined(GL_TEXTURE28)
    scope.attr("GL_TEXTURE28") = GL_TEXTURE28;
#endif
#if defined(GL_TEXTURE29)
    scope.attr("GL_TEXTURE29") = GL_TEXTURE29;
#endif
#if defined(GL_TEXTURE30)
    scope.attr("GL_TEXTURE30") = GL_TEXTURE30;
#endif
#if defined(GL_TEXTURE31)
    scope.attr("GL_TEXTURE31") = GL_TEXTURE31;
#endif
  }

}}} // gltbx::gl::boost_python
