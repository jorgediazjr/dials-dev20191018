/* *****************************************************
   THIS IS AN AUTOMATICALLY GENERATED FILE. DO NOT EDIT.
   *****************************************************

   Generated by:
     gltbx.generate_defines_bpl
 */

#include <boost/python/def.hpp>
#include <boost/python/scope.hpp>
#include <gltbx/include_opengl.h>

namespace gltbx { namespace glu { namespace boost_python {

  void
  wrap_defines_01(boost::python::scope scope)
  {
#if defined(GLU_OUTLINE_PATCH)
    scope.attr("GLU_OUTLINE_PATCH") = GLU_OUTLINE_PATCH;
#endif
#if defined(GLU_OUTLINE_POLY)
    scope.attr("GLU_OUTLINE_POLY") = GLU_OUTLINE_POLY;
#endif
#if defined(GLU_OUTLINE_POLYGON)
    scope.attr("GLU_OUTLINE_POLYGON") = GLU_OUTLINE_POLYGON;
#endif
#if defined(GLU_OUTSIDE)
    scope.attr("GLU_OUTSIDE") = GLU_OUTSIDE;
#endif
#if defined(GLU_OUT_OF_MEMORY)
    scope.attr("GLU_OUT_OF_MEMORY") = GLU_OUT_OF_MEMORY;
#endif
#if defined(GLU_PARAMETRIC_ERROR)
    scope.attr("GLU_PARAMETRIC_ERROR") = GLU_PARAMETRIC_ERROR;
#endif
#if defined(GLU_PARAMETRIC_TOLERANCE)
    scope.attr("GLU_PARAMETRIC_TOLERANCE") = GLU_PARAMETRIC_TOLERANCE;
#endif
#if defined(GLU_PATH_LENGTH)
    scope.attr("GLU_PATH_LENGTH") = GLU_PATH_LENGTH;
#endif
#if defined(GLU_POINT)
    scope.attr("GLU_POINT") = GLU_POINT;
#endif
#if defined(GLU_SAMPLING_METHOD)
    scope.attr("GLU_SAMPLING_METHOD") = GLU_SAMPLING_METHOD;
#endif
#if defined(GLU_SAMPLING_TOLERANCE)
    scope.attr("GLU_SAMPLING_TOLERANCE") = GLU_SAMPLING_TOLERANCE;
#endif
#if defined(GLU_SILHOUETTE)
    scope.attr("GLU_SILHOUETTE") = GLU_SILHOUETTE;
#endif
#if defined(GLU_SMOOTH)
    scope.attr("GLU_SMOOTH") = GLU_SMOOTH;
#endif
#if defined(GLU_TESS_BEGIN)
    scope.attr("GLU_TESS_BEGIN") = GLU_TESS_BEGIN;
#endif
#if defined(GLU_TESS_BEGIN_DATA)
    scope.attr("GLU_TESS_BEGIN_DATA") = GLU_TESS_BEGIN_DATA;
#endif
#if defined(GLU_TESS_BOUNDARY_ONLY)
    scope.attr("GLU_TESS_BOUNDARY_ONLY") = GLU_TESS_BOUNDARY_ONLY;
#endif
#if defined(GLU_TESS_COMBINE)
    scope.attr("GLU_TESS_COMBINE") = GLU_TESS_COMBINE;
#endif
#if defined(GLU_TESS_COMBINE_DATA)
    scope.attr("GLU_TESS_COMBINE_DATA") = GLU_TESS_COMBINE_DATA;
#endif
#if defined(GLU_TESS_COORD_TOO_LARGE)
    scope.attr("GLU_TESS_COORD_TOO_LARGE") = GLU_TESS_COORD_TOO_LARGE;
#endif
#if defined(GLU_TESS_EDGE_FLAG)
    scope.attr("GLU_TESS_EDGE_FLAG") = GLU_TESS_EDGE_FLAG;
#endif
#if defined(GLU_TESS_EDGE_FLAG_DATA)
    scope.attr("GLU_TESS_EDGE_FLAG_DATA") = GLU_TESS_EDGE_FLAG_DATA;
#endif
#if defined(GLU_TESS_END)
    scope.attr("GLU_TESS_END") = GLU_TESS_END;
#endif
#if defined(GLU_TESS_END_DATA)
    scope.attr("GLU_TESS_END_DATA") = GLU_TESS_END_DATA;
#endif
#if defined(GLU_TESS_ERROR)
    scope.attr("GLU_TESS_ERROR") = GLU_TESS_ERROR;
#endif
#if defined(GLU_TESS_ERROR_DATA)
    scope.attr("GLU_TESS_ERROR_DATA") = GLU_TESS_ERROR_DATA;
#endif
#if defined(GLU_TESS_MAX_COORD)
    scope.attr("GLU_TESS_MAX_COORD") = GLU_TESS_MAX_COORD;
#endif
#if defined(GLU_TESS_MISSING_BEGIN_CONTOUR)
    scope.attr("GLU_TESS_MISSING_BEGIN_CONTOUR") = GLU_TESS_MISSING_BEGIN_CONTOUR;
#endif
#if defined(GLU_TESS_MISSING_BEGIN_POLYGON)
    scope.attr("GLU_TESS_MISSING_BEGIN_POLYGON") = GLU_TESS_MISSING_BEGIN_POLYGON;
#endif
#if defined(GLU_TESS_MISSING_END_CONTOUR)
    scope.attr("GLU_TESS_MISSING_END_CONTOUR") = GLU_TESS_MISSING_END_CONTOUR;
#endif
#if defined(GLU_TESS_MISSING_END_POLYGON)
    scope.attr("GLU_TESS_MISSING_END_POLYGON") = GLU_TESS_MISSING_END_POLYGON;
#endif
#if defined(GLU_TESS_NEED_COMBINE_CALLBACK)
    scope.attr("GLU_TESS_NEED_COMBINE_CALLBACK") = GLU_TESS_NEED_COMBINE_CALLBACK;
#endif
#if defined(GLU_TESS_TOLERANCE)
    scope.attr("GLU_TESS_TOLERANCE") = GLU_TESS_TOLERANCE;
#endif
#if defined(GLU_TESS_VERTEX)
    scope.attr("GLU_TESS_VERTEX") = GLU_TESS_VERTEX;
#endif
#if defined(GLU_TESS_VERTEX_DATA)
    scope.attr("GLU_TESS_VERTEX_DATA") = GLU_TESS_VERTEX_DATA;
#endif
#if defined(GLU_TESS_WINDING_ABS_GEQ_TWO)
    scope.attr("GLU_TESS_WINDING_ABS_GEQ_TWO") = GLU_TESS_WINDING_ABS_GEQ_TWO;
#endif
#if defined(GLU_TESS_WINDING_NEGATIVE)
    scope.attr("GLU_TESS_WINDING_NEGATIVE") = GLU_TESS_WINDING_NEGATIVE;
#endif
#if defined(GLU_TESS_WINDING_NONZERO)
    scope.attr("GLU_TESS_WINDING_NONZERO") = GLU_TESS_WINDING_NONZERO;
#endif
#if defined(GLU_TESS_WINDING_ODD)
    scope.attr("GLU_TESS_WINDING_ODD") = GLU_TESS_WINDING_ODD;
#endif
#if defined(GLU_TESS_WINDING_POSITIVE)
    scope.attr("GLU_TESS_WINDING_POSITIVE") = GLU_TESS_WINDING_POSITIVE;
#endif
#if defined(GLU_TESS_WINDING_RULE)
    scope.attr("GLU_TESS_WINDING_RULE") = GLU_TESS_WINDING_RULE;
#endif
#if defined(GLU_UNKNOWN)
    scope.attr("GLU_UNKNOWN") = GLU_UNKNOWN;
#endif
#if defined(GLU_U_STEP)
    scope.attr("GLU_U_STEP") = GLU_U_STEP;
#endif
#if defined(GLU_VERSION)
    scope.attr("GLU_VERSION") = GLU_VERSION;
#endif
#if defined(GLU_V_STEP)
    scope.attr("GLU_V_STEP") = GLU_V_STEP;
#endif
  }

}}} // gltbx::glu::boost_python
